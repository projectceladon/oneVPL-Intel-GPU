cc_library_static {
    name: "encode_hw",

    vendor: true,

    defaults: [
        "vpl-runtime-defaults",
    ],

    srcs: [
        "_studio/mfx_lib/encode_hw/h264/src/mfx_h264_encode_hw.cpp",
        "_studio/mfx_lib/encode_hw/h264/src/mfx_h264_encode_hw_utils.cpp",
        "_studio/mfx_lib/encode_hw/h264/src/mfx_h264_encode_hw_utils_new.cpp",
        "_studio/mfx_lib/encode_hw/h264/src/mfx_h264_enc_common_hw.cpp",
        "_studio/mfx_lib/encode_hw/h264/src/mfx_h264_encode_factory.cpp",
        "_studio/mfx_lib/encode_hw/h264/src/mfx_h264_encode_vaapi.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_enctools.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_enctools_com.cpp",
        "_studio/mfx_lib/encode_hw/hevc/hevcehw_disp.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/hevcehw_base.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_alloc.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_constraints.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_dirty_rect.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_encode_stats.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_encoded_frame_info.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_ext_brc.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_hdr_sei.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_hrd.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_interlace.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_impl.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_legacy.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_legacy_defaults.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_max_frame_size.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_packer.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_parser.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_recon_info.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_query_impl_desc.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_roi.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_task.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_weighted_prediction.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_rext.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_scc.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_extddi.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base/hevcehw_base_caps.cpp",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/g12/hevcehw_g12_caps.cpp",
        "_studio/mfx_lib/encode_hw/hevc/linux/base/hevcehw_base_interlace_lin.cpp",
        "_studio/mfx_lib/encode_hw/hevc/linux/base/hevcehw_base_lin.cpp",
        "_studio/mfx_lib/encode_hw/hevc/linux/base/hevcehw_base_roi_lin.cpp",
        "_studio/mfx_lib/encode_hw/hevc/linux/base/hevcehw_base_va_lin.cpp",
        "_studio/mfx_lib/encode_hw/hevc/linux/base/hevcehw_base_va_packer_lin.cpp",
        "_studio/mfx_lib/encode_hw/hevc/linux/base/hevcehw_base_weighted_prediction_lin.cpp",
        "_studio/mfx_lib/encode_hw/hevc/linux/base/hevcehw_base_enctools_qmatrix_lin.cpp",
        "_studio/mfx_lib/encode_hw/hevc/linux/base/hevcehw_base_max_frame_size_lin.cpp",
        "_studio/mfx_lib/encode_hw/hevc/linux/base/hevcehw_base_dirty_rect_lin.cpp",
        "_studio/mfx_lib/encode_hw/hevc/linux/base/hevcehw_base_rext_lin.cpp",
        "_studio/mfx_lib/encode_hw/hevc/linux/base/hevcehw_base_qp_modulation_lin.cpp",
        "_studio/mfx_lib/encode_hw/hevc/linux/g12/hevcehw_g12_lin.cpp",
        "_studio/mfx_lib/encode_hw/hevc/linux/xe_hpm/hevcehw_xe_hpm_lin.cpp",
        "_studio/mfx_lib/encode_hw/hevc/linux/xe_lpm_plus/hevcehw_xe_lpm_plus_lin.cpp",
        "_studio/mfx_lib/encode_hw/av1/av1ehw_disp.cpp",
        "_studio/mfx_lib/encode_hw/av1/agnostic/av1ehw_base.cpp",
        "_studio/mfx_lib/encode_hw/av1/linux/base/av1ehw_base_lin.cpp",
        "_studio/mfx_lib/encode_hw/av1/linux/base/av1ehw_base_va_lin.cpp",
        "_studio/mfx_lib/encode_hw/av1/linux/base/av1ehw_base_va_packer_lin.cpp",
        "_studio/mfx_lib/encode_hw/av1/linux/base/av1ehw_base_max_frame_size_lin.cpp",
        "_studio/mfx_lib/encode_hw/av1/agnostic/base/av1ehw_base_alloc.cpp",
        "_studio/mfx_lib/encode_hw/av1/agnostic/base/av1ehw_base_constraints.cpp",
        "_studio/mfx_lib/encode_hw/av1/agnostic/base/av1ehw_base_qmatrix.cpp",
        "_studio/mfx_lib/encode_hw/av1/agnostic/base/av1ehw_base_general.cpp",
        "_studio/mfx_lib/encode_hw/av1/agnostic/base/av1ehw_base_general_defaults.cpp",
        "_studio/mfx_lib/encode_hw/av1/agnostic/base/av1ehw_base_impl.cpp",
        "_studio/mfx_lib/encode_hw/av1/agnostic/base/av1ehw_base_packer.cpp",
        "_studio/mfx_lib/encode_hw/av1/agnostic/base/av1ehw_base_query_impl_desc.cpp",
        "_studio/mfx_lib/encode_hw/av1/agnostic/base/av1ehw_base_segmentation.cpp",
        "_studio/mfx_lib/encode_hw/av1/agnostic/base/av1ehw_base_task.cpp",
        "_studio/mfx_lib/encode_hw/av1/agnostic/base/av1ehw_base_tile.cpp",
        "_studio/mfx_lib/encode_hw/av1/agnostic/base/av1ehw_base_encoded_frame_info.cpp",
        "_studio/mfx_lib/encode_hw/av1/agnostic/base/av1ehw_base_max_frame_size.cpp",
        "_studio/mfx_lib/encode_hw/av1/agnostic/base/av1ehw_base_enctools.cpp",
        "_studio/mfx_lib/encode_hw/av1/agnostic/base/av1ehw_base_hdr.cpp",
        "_studio/mfx_lib/encode_hw/av1/agnostic/base/av1ehw_base_enctools_com.cpp",
        "_studio/mfx_lib/encode_hw/av1/agnostic/Xe_HPM/av1ehw_xe_hpm_segmentation.cpp",
        "_studio/mfx_lib/encode_hw/av1/linux/Xe_HPM/av1ehw_xe_hpm_lin.cpp",
        "_studio/mfx_lib/encode_hw/av1/linux/Xe_LPM_plus/av1ehw_xe_lpm_plus_lin.cpp",
        "_studio/mfx_lib/encode_hw/mjpeg/src/mfx_mjpeg_encode_factory.cpp",
        "_studio/mfx_lib/encode_hw/mjpeg/src/mfx_mjpeg_encode_hw.cpp",
        "_studio/mfx_lib/encode_hw/mjpeg/src/mfx_mjpeg_encode_hw_utils.cpp",
        "_studio/mfx_lib/encode_hw/mjpeg/src/mfx_mjpeg_encode_vaapi.cpp",
        "_studio/mfx_lib/encode_hw/vp9/src/mfx_vp9_encode_hw.cpp",
        "_studio/mfx_lib/encode_hw/vp9/src/mfx_vp9_encode_hw_ddi.cpp",
        "_studio/mfx_lib/encode_hw/vp9/src/mfx_vp9_encode_hw_par.cpp",
        "_studio/mfx_lib/encode_hw/vp9/src/mfx_vp9_encode_hw_utils.cpp",
        "_studio/mfx_lib/encode_hw/vp9/src/mfx_vp9_encode_hw_vaapi.cpp",
        "_studio/mfx_lib/encode_hw/shared/ehw_resources_pool.cpp",
        "_studio/mfx_lib/encode_hw/shared/ehw_task_manager.cpp",
        "_studio/mfx_lib/encode_hw/shared/ehw_device_vaapi.cpp",
        "_studio/mfx_lib/encode_hw/shared/ehw_utils_vaapi.cpp",
    ],

    cflags: [
        
    ],

    cppflags: [
        "-O3",
        "-DNDEBUG",
        "-fPIC",
        "-Wno-deprecated-declarations",
        "-Wno-unknown-pragmas",
        "-Wno-unused",
        "-std=gnu++14",
        "-DLINUX",
        "-DLINUX32",
        "-DLINUX64",
        "-DMEDIA_VERSION_STR=24.1.5",
        "-DMFX_API_VERSION=2.9+",
        "-DMFX_BUILD_INFO=Ubuntu | GNU 11.4.0 | glibc 2.35",
        "-DMFX_DEPRECATED_OFF",
        "-DMFX_GIT_COMMIT=9c1340b5",
        "-DMFX_ONEVPL",
        "-DMFX_VERSION_USE_LATEST",
        "-DMSDK_BUILD=",
        "-DNDEBUG",
        "-DONEVPL_EXPERIMENTAL",
        "-DSYNCHRONIZATION_BY_VA_SYNC_SURFACE",
        "-D_FILE_OFFSET_BITS=64",
        "-D__USE_LARGEFILE64",
    ],

    local_include_dirs: [
        "_studio/mfx_lib/encode_hw/h264/include",
        "_studio/mfx_lib/encode_hw/hevc",
        "_studio/mfx_lib/encode_hw/hevc/agnostic",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/base",
        "_studio/mfx_lib/encode_hw/hevc/agnostic/g12",
        "_studio/mfx_lib/encode_hw/hevc/linux",
        "_studio/mfx_lib/encode_hw/hevc/linux/g12",
        "_studio/mfx_lib/encode_hw/hevc/linux/base",
        "_studio/mfx_lib/encode_hw/hevc/linux/xe_hpm",
        "_studio/mfx_lib/encode_hw/hevc/linux/xe_lpm_plus",
        "_studio/mfx_lib/encode_hw/av1",
        "_studio/mfx_lib/encode_hw/av1/agnostic",
        "_studio/mfx_lib/encode_hw/av1/agnostic/base",
        "_studio/mfx_lib/encode_hw/av1/linux",
        "_studio/mfx_lib/encode_hw/av1/linux/base",
        "_studio/mfx_lib/encode_hw/av1/agnostic/Xe_HPM",
        "_studio/mfx_lib/encode_hw/av1/linux/Xe_HPM",
        "_studio/mfx_lib/encode_hw/av1/agnostic/Xe_LPM_plus",
        "_studio/mfx_lib/encode_hw/av1/linux/Xe_LPM_plus",
        "_studio/mfx_lib/encode_hw/mjpeg/include",
        "_studio/shared/umc/codec/jpeg_common/include",
        "_studio/mfx_lib/encode_hw/vp9/include",
        "_studio/mfx_lib/encode_hw/shared",
        "_studio/shared/include",
        "_studio/shared/mfx_logging/include",
        "_studio/shared/umc/codec/brc/include",
        "_studio/shared/umc/codec/color_space_converter/include",
        "_studio/shared/enctools/include",
        "_studio/mfx_lib/shared/include",
        "build",
        "api/vpl",
        "api/mediasdk_structures",
        "api/vpl/private",
        "contrib/ipp/include",
        "_studio/shared/umc/io/umc_va/include",
        "_studio/shared/umc/core/umc/include",
        "_studio/shared/umc/core/vm/include",
        "_studio/shared/umc/core/vm_plus/include",
        "_studio/shared/asc/include",
        "_studio/shared/umc/codec/h265_dec/include",
        "_studio/shared/umc/codec/h264_dec/include",
        "_studio/shared/umc/codec/av1_dec/include",
        "_studio/shared/umc/codec/vp9_dec/include",
        "_studio/mfx_lib/ext/genx/asc/isa",
        "_studio/mfx_lib/ext/genx/copy_kernels/isa",
        "_studio/mfx_lib/ext/genx/field_copy/isa",
        "_studio/mfx_lib/ext/genx/h264_encode/isa",
        "_studio/mfx_lib/ext/genx/mctf/isa",
        "_studio/mfx_lib/ext/mctf_package/mctf/include",
        "_studio/mfx_lib/ext/h264/include",
        "_studio/mfx_lib/ext/mpeg2/include",
        "_studio/mfx_lib/ext/asc/include",
        "_studio/mfx_lib/ext/cmrt_cross_platform/include",
    ],

    shared_libs: [
        
    ],

    static_libs: [
        
    ],

}